service: rtkq-streaming-http-api

frameworkVersion: '2'

projectDir: ../

plugins:
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: ${self:custom.sharedBucketName}
  deploymentPrefix: ${self:custom.basename}
  lambdaHashingVersion: 20201221
  memorySize: 256
  environment:
    SERVICE_NAME: ${self:service}
    BASE_NAME: ${self:custom.basename}
    MAIN_TABLE_NAME: !Ref RtkqStreamingMainTable
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DescribeStream
        - dynamodb:GetRecords
        - dynamodb:GetShardIterator
        - dynamodb:ListStreams
      Resource:
        - !GetAtt RtkqStreamingMainTable.Arn
        - !Join ['/', [!GetAtt RtkqStreamingMainTable.Arn, 'index', '*']]

custom:
  basename: ${self:service}-${self:provider.stage}
  sharedBucketName: eric-experiments-k9xjhbjk3r4s

functions:
  orders:
    handler: api-handlers/orders.handler
    events:
      - http:
          method: GET
          path: orders
          cors: true
          authorizer:
            name: storeAuthorizer
      - http:
          method: POST
          path: orders
          cors: true
          authorizer:
            name: storeAuthorizer
          request:
            schema:
              application/json: ${file(schema/createOrder.json)}

  clients:
    handler: api-handlers/clients.handler
    events:
      - http:
          method: POST
          path: clients
          cors: true
          # authorizer:
          #   name: storeAuthorizer
          # request:
          #   schema:
          #     application/json: ${file(schema/createOrder.json)}

  createFakeOrders:
    handler: cron-handlers/createFakeOrders.handler
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: false

  storeAuthorizer:
    handler: authorizers/storeAuthorizer.handler
